!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
GC_MAP	gc_map.h	4;"	d
GC_MAP	gc_set.h	4;"	d
GC_MAP_COLOR	gc_header_map.h	4;"	d
GC_MAP_COLOR	gc_header_set.h	4;"	d
GC_MAP_COLOR	gc_map.h	9;"	d
GC_MAP_COLOR	gc_set.h	9;"	d
GC_MAP_LOG	gc_map.h	18;"	d
GC_MAP_LOG	gc_set.h	18;"	d
GC_NEXT_PRIME	gc_unordered_map.h	4;"	d
GC_NEXT_PRIME	gc_unordered_set.h	4;"	d
GC_NODE_STATE	gc_static_unordered_map.h	4;"	d
GC_NODE_STATE	gc_static_unordered_set.h	4;"	d
GC_PREPARE_STACK	gc_forward_list.h	7;"	d
GC_PREPARE_STACK	gc_list.h	7;"	d
GC_ST	gc_static_types.h	4;"	d
GC_STACK	gc_forward_list.h	4;"	d
GC_STACK	gc_list.h	4;"	d
GC_STACK_POP	gc_forward_list.h	16;"	d
GC_STACK_POP	gc_list.h	16;"	d
GC_STACK_PUSH	gc_forward_list.h	11;"	d
GC_STACK_PUSH	gc_list.h	11;"	d
GC_STACK_SIZE	gc_forward_list.h	5;"	d
GC_STACK_SIZE	gc_list.h	5;"	d
GC_STACK_THRESH	gc_forward_list.h	21;"	d
GC_STACK_THRESH	gc_list.h	21;"	d
INIT_DEQUE	gc_deque.h	3;"	d
INIT_FORWARD_LIST	gc_forward_list.h	24;"	d
INIT_HASH	gc_static_types.h	60;"	d
INIT_HEADER_DEQUE	gc_header_deque.h	3;"	d
INIT_HEADER_FORWARD_LIST	gc_header_forward_list.h	3;"	d
INIT_HEADER_HASH	gc_header_static_types.h	31;"	d
INIT_HEADER_LIST	gc_header_list.h	3;"	d
INIT_HEADER_MAP	gc_header_map.h	12;"	d
INIT_HEADER_PRIORITY_QUEUE	gc_header_priority_queue.h	3;"	d
INIT_HEADER_QUEUE	gc_header_queue.h	3;"	d
INIT_HEADER_SET	gc_header_set.h	12;"	d
INIT_HEADER_STACK	gc_header_stack.h	3;"	d
INIT_HEADER_STATIC	gc_header_static_types.h	3;"	d
INIT_HEADER_STATIC_DEQUE	gc_header_static_deque.h	3;"	d
INIT_HEADER_STATIC_PRIORITY_QUEUE	gc_header_static_priority_queue.h	3;"	d
INIT_HEADER_STATIC_QUEUE	gc_header_static_queue.h	3;"	d
INIT_HEADER_STATIC_STACK	gc_header_static_stack.h	3;"	d
INIT_HEADER_STATIC_STRUCT	gc_header_static_types.h	42;"	d
INIT_HEADER_STATIC_UNORDERED_MAP	gc_header_static_unordered_map.h	3;"	d
INIT_HEADER_STATIC_UNORDERED_SET	gc_header_static_unordered_set.h	3;"	d
INIT_HEADER_STATIC_VECTOR	gc_header_static_vector.h	3;"	d
INIT_HEADER_STRING	gc_header_string.h	3;"	d
INIT_HEADER_UNORDERED_MAP	gc_header_unordered_map.h	3;"	d
INIT_HEADER_UNORDERED_SET	gc_header_unordered_set.h	3;"	d
INIT_HEADER_VECTOR	gc_header_vector.h	3;"	d
INIT_LIST	gc_list.h	24;"	d
INIT_MAP	gc_map.h	40;"	d
INIT_PRIORITY_QUEUE	gc_priority_queue.h	3;"	d
INIT_QUEUE	gc_queue.h	4;"	d
INIT_SET	gc_set.h	40;"	d
INIT_STACK	gc_stack.h	3;"	d
INIT_STATIC	gc_static_types.h	10;"	d
INIT_STATIC_DEQUE	gc_static_deque.h	3;"	d
INIT_STATIC_PRIORITY_QUEUE	gc_static_priority_queue.h	3;"	d
INIT_STATIC_QUEUE	gc_static_queue.h	3;"	d
INIT_STATIC_STACK	gc_static_stack.h	3;"	d
INIT_STATIC_STRUCT	gc_static_types.h	76;"	d
INIT_STATIC_UNORDERED_MAP	gc_static_unordered_map.h	15;"	d
INIT_STATIC_UNORDERED_SET	gc_static_unordered_set.h	15;"	d
INIT_STATIC_VECTOR	gc_static_vector.h	3;"	d
INIT_STRING	gc_string.h	3;"	d
INIT_UNORDERED_MAP	gc_unordered_map.h	41;"	d
INIT_UNORDERED_SET	gc_unordered_set.h	41;"	d
INIT_VECTOR	gc_vector.h	3;"	d
MAP_BLACK	gc_header_map.h	/^        MAP_BLACK,$/;"	e	enum:map_color
MAP_BLACK	gc_header_set.h	/^        MAP_BLACK,$/;"	e	enum:map_color
MAP_BLACK	gc_map.h	/^        MAP_BLACK,$/;"	e	enum:map_color
MAP_BLACK	gc_set.h	/^        MAP_BLACK,$/;"	e	enum:map_color
MAP_LEAF	gc_map.h	5;"	d
MAP_LEAF	gc_set.h	5;"	d
MAP_RED	gc_header_map.h	/^        MAP_RED,$/;"	e	enum:map_color
MAP_RED	gc_header_set.h	/^        MAP_RED,$/;"	e	enum:map_color
MAP_RED	gc_map.h	/^        MAP_RED,$/;"	e	enum:map_color
MAP_RED	gc_set.h	/^        MAP_RED,$/;"	e	enum:map_color
STATE_ERASED	gc_static_unordered_map.h	/^        STATE_ERASED,$/;"	e	enum:node_state
STATE_ERASED	gc_static_unordered_set.h	/^        STATE_ERASED,$/;"	e	enum:node_state
STATE_OPEN	gc_static_unordered_map.h	/^        STATE_OPEN,$/;"	e	enum:node_state
STATE_OPEN	gc_static_unordered_set.h	/^        STATE_OPEN,$/;"	e	enum:node_state
STATE_USED	gc_static_unordered_map.h	/^        STATE_USED,$/;"	e	enum:node_state
STATE_USED	gc_static_unordered_set.h	/^        STATE_USED,$/;"	e	enum:node_state
gc_exp_two	gc_map.h	/^static size_t gc_exp_two(size_t curr)$/;"	f
gc_exp_two	gc_set.h	/^static size_t gc_exp_two(size_t curr)$/;"	f
gc_is_prime	gc_unordered_map.h	/^static int gc_is_prime(size_t n)$/;"	f
gc_is_prime	gc_unordered_set.h	/^static int gc_is_prime(size_t n)$/;"	f
gc_log_two	gc_map.h	/^static size_t gc_log_two(size_t size)$/;"	f
gc_log_two	gc_set.h	/^static size_t gc_log_two(size_t size)$/;"	f
gc_next_prime	gc_unordered_map.h	/^static size_t gc_next_prime(size_t n)$/;"	f
gc_next_prime	gc_unordered_set.h	/^static size_t gc_next_prime(size_t n)$/;"	f
gc_sqrt	gc_unordered_map.h	/^static size_t gc_sqrt(size_t n)$/;"	f
gc_sqrt	gc_unordered_set.h	/^static size_t gc_sqrt(size_t n)$/;"	f
map_color	gc_header_map.h	/^enum map_color$/;"	g
map_color	gc_header_set.h	/^enum map_color$/;"	g
map_color	gc_map.h	/^enum map_color$/;"	g
map_color	gc_set.h	/^enum map_color$/;"	g
node_state	gc_static_unordered_map.h	/^enum node_state$/;"	g
node_state	gc_static_unordered_set.h	/^enum node_state$/;"	g
